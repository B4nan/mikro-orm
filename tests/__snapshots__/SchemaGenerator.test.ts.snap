// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SchemaGenerator generate schema from metadata [mysql]: mysql-schema-dump 1`] = `
"set names utf8;
set foreign_key_checks = 0;

drop table if exists \`author2\`;
drop table if exists \`book2\`;
drop table if exists \`book_tag2\`;
drop table if exists \`publisher2\`;
drop table if exists \`test2\`;
drop table if exists \`foo_bar2\`;
drop table if exists \`foo_baz2\`;
drop table if exists \`book2_to_book_tag2\`;
drop table if exists \`publisher2_to_test2\`;

create table \`author2\` (\`id\` int unsigned not null auto_increment primary key, \`created_at\` datetime(3) not null default current_timestamp(3), \`updated_at\` datetime(3) not null default current_timestamp(3), \`name\` varchar(255) not null, \`email\` varchar(255) not null, \`age\` int(11) null, \`terms_accepted\` tinyint(1) not null default 0, \`identities\` json null, \`born\` datetime null, \`favourite_book_uuid_pk\` varchar(36) null, \`favourite_author_id\` int(11) unsigned null) default character set utf8 engine = InnoDB;
alter table \`author2\` add unique \`author2_email_unique\`(\`email\`);
alter table \`author2\` add index \`author2_favourite_book_uuid_pk_index\`(\`favourite_book_uuid_pk\`);
alter table \`author2\` add index \`author2_favourite_author_id_index\`(\`favourite_author_id\`);

create table \`book2\` (\`uuid_pk\` varchar(36) not null, \`created_at\` datetime(3) not null default current_timestamp(3), \`title\` varchar(255) null, \`perex\` text null, \`price\` float null, \`double\` double null, \`meta\` json null, \`author_id\` int(11) unsigned null, \`publisher_id\` int(11) unsigned null) default character set utf8 engine = InnoDB;
alter table \`book2\` add primary key \`book2_pkey\`(\`uuid_pk\`);
alter table \`book2\` add index \`book2_author_id_index\`(\`author_id\`);
alter table \`book2\` add index \`book2_publisher_id_index\`(\`publisher_id\`);

create table \`book_tag2\` (\`id\` int unsigned not null auto_increment primary key, \`name\` varchar(50) not null) default character set utf8 engine = InnoDB;

create table \`publisher2\` (\`id\` int unsigned not null auto_increment primary key, \`name\` varchar(255) not null, \`type\` varchar(10) not null) default character set utf8 engine = InnoDB;

create table \`test2\` (\`id\` int unsigned not null auto_increment primary key, \`name\` varchar(255) null, \`book_uuid_pk\` varchar(36) null, \`version\` int(11) not null default 1) default character set utf8 engine = InnoDB;
alter table \`test2\` add unique \`test2_book_uuid_pk_unique\`(\`book_uuid_pk\`);
alter table \`test2\` add index \`test2_book_uuid_pk_index\`(\`book_uuid_pk\`);

create table \`foo_bar2\` (\`id\` int unsigned not null auto_increment primary key, \`name\` varchar(255) not null, \`baz_id\` int(11) unsigned null, \`foo_bar_id\` int(11) unsigned null, \`version\` datetime(3) not null default current_timestamp(3)) default character set utf8 engine = InnoDB;
alter table \`foo_bar2\` add unique \`foo_bar2_baz_id_unique\`(\`baz_id\`);
alter table \`foo_bar2\` add index \`foo_bar2_baz_id_index\`(\`baz_id\`);
alter table \`foo_bar2\` add unique \`foo_bar2_foo_bar_id_unique\`(\`foo_bar_id\`);
alter table \`foo_bar2\` add index \`foo_bar2_foo_bar_id_index\`(\`foo_bar_id\`);

create table \`foo_baz2\` (\`id\` int unsigned not null auto_increment primary key, \`name\` varchar(255) not null) default character set utf8 engine = InnoDB;

create table \`book2_to_book_tag2\` (\`id\` int unsigned not null auto_increment primary key, \`book2_uuid_pk\` varchar(36) not null, \`book_tag2_id\` int(11) unsigned not null) default character set utf8 engine = InnoDB;
alter table \`book2_to_book_tag2\` add index \`book2_to_book_tag2_book2_uuid_pk_index\`(\`book2_uuid_pk\`);
alter table \`book2_to_book_tag2\` add index \`book2_to_book_tag2_book_tag2_id_index\`(\`book_tag2_id\`);

create table \`publisher2_to_test2\` (\`id\` int unsigned not null auto_increment primary key, \`publisher2_id\` int(11) unsigned not null, \`test2_id\` int(11) unsigned not null) default character set utf8 engine = InnoDB;
alter table \`publisher2_to_test2\` add index \`publisher2_to_test2_publisher2_id_index\`(\`publisher2_id\`);
alter table \`publisher2_to_test2\` add index \`publisher2_to_test2_test2_id_index\`(\`test2_id\`);

alter table \`author2\` add constraint \`author2_favourite_book_uuid_pk_foreign\` foreign key (\`favourite_book_uuid_pk\`) references \`book2\` (\`uuid_pk\`) on update cascade on delete set null;
alter table \`author2\` add constraint \`author2_favourite_author_id_foreign\` foreign key (\`favourite_author_id\`) references \`author2\` (\`id\`) on update cascade on delete set null;

alter table \`book2\` add constraint \`book2_author_id_foreign\` foreign key (\`author_id\`) references \`author2\` (\`id\`) on delete set null;
alter table \`book2\` add constraint \`book2_publisher_id_foreign\` foreign key (\`publisher_id\`) references \`publisher2\` (\`id\`) on delete set null;

alter table \`test2\` add constraint \`test2_book_uuid_pk_foreign\` foreign key (\`book_uuid_pk\`) references \`book2\` (\`uuid_pk\`) on delete set null;

alter table \`foo_bar2\` add constraint \`foo_bar2_baz_id_foreign\` foreign key (\`baz_id\`) references \`foo_baz2\` (\`id\`) on update cascade on delete set null;
alter table \`foo_bar2\` add constraint \`foo_bar2_foo_bar_id_foreign\` foreign key (\`foo_bar_id\`) references \`foo_bar2\` (\`id\`) on update cascade on delete set null;

alter table \`book2_to_book_tag2\` add constraint \`book2_to_book_tag2_book2_uuid_pk_foreign\` foreign key (\`book2_uuid_pk\`) references \`book2\` (\`uuid_pk\`) on update cascade on delete cascade;
alter table \`book2_to_book_tag2\` add constraint \`book2_to_book_tag2_book_tag2_id_foreign\` foreign key (\`book_tag2_id\`) references \`book_tag2\` (\`id\`) on update cascade on delete cascade;

alter table \`publisher2_to_test2\` add constraint \`publisher2_to_test2_publisher2_id_foreign\` foreign key (\`publisher2_id\`) references \`publisher2\` (\`id\`) on update cascade on delete cascade;
alter table \`publisher2_to_test2\` add constraint \`publisher2_to_test2_test2_id_foreign\` foreign key (\`test2_id\`) references \`test2\` (\`id\`) on update cascade on delete cascade;

set foreign_key_checks = 1;
"
`;

exports[`SchemaGenerator generate schema from metadata [postgres]: postgres-schema-dump 1`] = `
"set names 'utf8';
set session_replication_role = 'replica';

drop table if exists \\"author2\\";
drop table if exists \\"book2\\";
drop table if exists \\"book_tag2\\";
drop table if exists \\"publisher2\\";
drop table if exists \\"test2\\";
drop table if exists \\"foo_bar2\\";
drop table if exists \\"foo_baz2\\";
drop table if exists \\"book2_to_book_tag2\\";
drop table if exists \\"publisher2_to_test2\\";

create table \\"author2\\" (\\"id\\" serial primary key, \\"created_at\\" timestamp(3) not null default current_timestamp(3), \\"updated_at\\" timestamp(3) not null default current_timestamp(3), \\"name\\" varchar(255) not null, \\"email\\" varchar(255) not null, \\"age\\" int null, \\"terms_accepted\\" boolean not null default 0, \\"identities\\" json null, \\"born\\" timestamp null, \\"favourite_book_uuid_pk\\" varchar(36) null, \\"favourite_author_id\\" int null);
alter table \\"author2\\" add constraint \\"author2_email_unique\\" unique (\\"email\\");

create table \\"book2\\" (\\"uuid_pk\\" varchar(36) not null, \\"created_at\\" timestamp(3) not null default current_timestamp(3), \\"title\\" varchar(255) null, \\"perex\\" text null, \\"price\\" float null, \\"double\\" double precision null, \\"meta\\" json null, \\"author_id\\" int null, \\"publisher_id\\" int null);
alter table \\"book2\\" add constraint \\"book2_pkey\\" primary key (\\"uuid_pk\\");

create table \\"book_tag2\\" (\\"id\\" serial primary key, \\"name\\" varchar(50) not null);

create table \\"publisher2\\" (\\"id\\" serial primary key, \\"name\\" varchar(255) not null, \\"type\\" varchar(10) not null);

create table \\"test2\\" (\\"id\\" serial primary key, \\"name\\" varchar(255) null, \\"book_uuid_pk\\" varchar(36) null, \\"version\\" int not null default 1);
alter table \\"test2\\" add constraint \\"test2_book_uuid_pk_unique\\" unique (\\"book_uuid_pk\\");

create table \\"foo_bar2\\" (\\"id\\" serial primary key, \\"name\\" varchar(255) not null, \\"baz_id\\" int null, \\"foo_bar_id\\" int null, \\"version\\" timestamp(3) not null default current_timestamp(3));
alter table \\"foo_bar2\\" add constraint \\"foo_bar2_baz_id_unique\\" unique (\\"baz_id\\");
alter table \\"foo_bar2\\" add constraint \\"foo_bar2_foo_bar_id_unique\\" unique (\\"foo_bar_id\\");

create table \\"foo_baz2\\" (\\"id\\" serial primary key, \\"name\\" varchar(255) not null);

create table \\"book2_to_book_tag2\\" (\\"id\\" serial primary key, \\"book2_uuid_pk\\" varchar(36) not null, \\"book_tag2_id\\" int not null);

create table \\"publisher2_to_test2\\" (\\"id\\" serial primary key, \\"publisher2_id\\" int not null, \\"test2_id\\" int not null);

alter table \\"author2\\" add constraint \\"author2_favourite_book_uuid_pk_foreign\\" foreign key (\\"favourite_book_uuid_pk\\") references \\"book2\\" (\\"uuid_pk\\") on update cascade on delete set null;
alter table \\"author2\\" add constraint \\"author2_favourite_author_id_foreign\\" foreign key (\\"favourite_author_id\\") references \\"author2\\" (\\"id\\") on update cascade on delete set null;

alter table \\"book2\\" add constraint \\"book2_author_id_foreign\\" foreign key (\\"author_id\\") references \\"author2\\" (\\"id\\") on delete set null;
alter table \\"book2\\" add constraint \\"book2_publisher_id_foreign\\" foreign key (\\"publisher_id\\") references \\"publisher2\\" (\\"id\\") on delete set null;

alter table \\"test2\\" add constraint \\"test2_book_uuid_pk_foreign\\" foreign key (\\"book_uuid_pk\\") references \\"book2\\" (\\"uuid_pk\\") on delete set null;

alter table \\"foo_bar2\\" add constraint \\"foo_bar2_baz_id_foreign\\" foreign key (\\"baz_id\\") references \\"foo_baz2\\" (\\"id\\") on update cascade on delete set null;
alter table \\"foo_bar2\\" add constraint \\"foo_bar2_foo_bar_id_foreign\\" foreign key (\\"foo_bar_id\\") references \\"foo_bar2\\" (\\"id\\") on update cascade on delete set null;

alter table \\"book2_to_book_tag2\\" add constraint \\"book2_to_book_tag2_book2_uuid_pk_foreign\\" foreign key (\\"book2_uuid_pk\\") references \\"book2\\" (\\"uuid_pk\\") on update cascade on delete cascade;
alter table \\"book2_to_book_tag2\\" add constraint \\"book2_to_book_tag2_book_tag2_id_foreign\\" foreign key (\\"book_tag2_id\\") references \\"book_tag2\\" (\\"id\\") on update cascade on delete cascade;

alter table \\"publisher2_to_test2\\" add constraint \\"publisher2_to_test2_publisher2_id_foreign\\" foreign key (\\"publisher2_id\\") references \\"publisher2\\" (\\"id\\") on update cascade on delete cascade;
alter table \\"publisher2_to_test2\\" add constraint \\"publisher2_to_test2_test2_id_foreign\\" foreign key (\\"test2_id\\") references \\"test2\\" (\\"id\\") on update cascade on delete cascade;

set session_replication_role = 'origin';
"
`;

exports[`SchemaGenerator generate schema from metadata [sqlite]: sqlite-schema-dump 1`] = `
"pragma foreign_keys = off;

drop table if exists \`author3\`;
drop table if exists \`book3\`;
drop table if exists \`book_tag3\`;
drop table if exists \`publisher3\`;
drop table if exists \`test3\`;
drop table if exists \`book3_to_book_tag3\`;
drop table if exists \`publisher3_to_test3\`;

create table \`author3\` (\`id\` integer not null primary key autoincrement, \`created_at\` text null, \`updated_at\` text null, \`name\` text not null, \`email\` text not null, \`age\` integer null, \`terms_accepted\` integer not null default 0, \`identities\` text null, \`born\` text null);
create unique index \`author3_email_unique\` on \`author3\` (\`email\`);

create table \`book3\` (\`id\` integer not null primary key autoincrement, \`title\` text not null);

create table \`book_tag3\` (\`id\` integer not null primary key autoincrement, \`name\` text not null, \`version\` text not null default current_timestamp);

create table \`publisher3\` (\`id\` integer not null primary key autoincrement, \`name\` text not null, \`type\` text not null);

create table \`test3\` (\`id\` integer not null primary key autoincrement, \`name\` text null, \`version\` integer not null default 1);

create table \`book3_to_book_tag3\` (\`id\` integer not null primary key autoincrement);

create table \`publisher3_to_test3\` (\`id\` integer not null primary key autoincrement);

alter table \`author3\` add column \`favourite_book_id\` integer null;
create index \`author3_favourite_book_id_index\` on \`author3\` (\`favourite_book_id\`);

alter table \`book3\` add column \`author_id\` integer null;
alter table \`book3\` add column \`publisher_id\` integer null;
create index \`book3_author_id_index\` on \`book3\` (\`author_id\`);
create index \`book3_publisher_id_index\` on \`book3\` (\`publisher_id\`);

alter table \`book3_to_book_tag3\` add column \`book3_id\` integer null;
alter table \`book3_to_book_tag3\` add column \`book_tag3_id\` integer null;
create index \`book3_to_book_tag3_book3_id_index\` on \`book3_to_book_tag3\` (\`book3_id\`);
create index \`book3_to_book_tag3_book_tag3_id_index\` on \`book3_to_book_tag3\` (\`book_tag3_id\`);

alter table \`publisher3_to_test3\` add column \`publisher3_id\` integer null;
alter table \`publisher3_to_test3\` add column \`test3_id\` integer null;
create index \`publisher3_to_test3_publisher3_id_index\` on \`publisher3_to_test3\` (\`publisher3_id\`);
create index \`publisher3_to_test3_test3_id_index\` on \`publisher3_to_test3\` (\`test3_id\`);

pragma foreign_keys = on;
"
`;
