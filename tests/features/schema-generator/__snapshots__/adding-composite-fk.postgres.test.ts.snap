// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`adding m:1 with composite PK (FK as PK + scalar PK) (GH 1687) schema generator adds the m:1 columns and FK properly 1`] = `
"set names 'utf8';
set session_replication_role = 'replica';

create table \\"country\\" (\\"id\\" serial primary key, \\"name\\" varchar(255) not null, \\"currency\\" varchar(255) not null, \\"currency_symbol\\" varchar(255) not null);

create table \\"state\\" (\\"country_id\\" int not null, \\"id\\" int not null, \\"name\\" varchar(255) not null);
alter table \\"state\\" add constraint \\"state_pkey\\" primary key (\\"country_id\\", \\"id\\");

create table \\"user\\" (\\"id\\" varchar(255) not null, \\"email\\" varchar(255) not null, \\"first_name\\" varchar(255) null, \\"last_name\\" varchar(255) null, \\"date_of_birth\\" date null, \\"created\\" timestamptz not null, \\"modified\\" timestamptz not null);
alter table \\"user\\" add constraint \\"user_pkey\\" primary key (\\"id\\");

create table \\"city\\" (\\"state_country_id\\" int not null, \\"state_id\\" int not null, \\"id\\" int not null, \\"name\\" varchar(255) not null);
create index \\"city_state_country_id_state_id_index\\" on \\"city\\" (\\"state_country_id\\", \\"state_id\\");
alter table \\"city\\" add constraint \\"city_pkey\\" primary key (\\"state_country_id\\", \\"state_id\\", \\"id\\");

alter table \\"state\\" add constraint \\"state_country_id_foreign\\" foreign key (\\"country_id\\") references \\"country\\" (\\"id\\") on update cascade;

alter table \\"city\\" add constraint \\"city_state_country_id_state_id_foreign\\" foreign key (\\"state_country_id\\", \\"state_id\\") references \\"state\\" (\\"country_id\\", \\"id\\") on update cascade;

set session_replication_role = 'origin';
"
`;

exports[`adding m:1 with composite PK (FK as PK + scalar PK) (GH 1687) schema generator adds the m:1 columns and FK properly 2`] = `
"alter table \\"user\\" add column \\"city_state_country_id\\" int not null, add column \\"city_state_id\\" int not null, add column \\"city_id\\" int not null;
alter table \\"user\\" drop constraint if exists \\"user_created_check\\";
alter table \\"user\\" alter column \\"created\\" type timestamptz using (\\"created\\"::timestamptz);
alter table \\"user\\" drop constraint if exists \\"user_modified_check\\";
alter table \\"user\\" alter column \\"modified\\" type timestamptz using (\\"modified\\"::timestamptz);
alter table \\"user\\" add constraint \\"user_city_state_country_id_city_state_id_city_id_foreign\\" foreign key (\\"city_state_country_id\\", \\"city_state_id\\", \\"city_id\\") references \\"city\\" (\\"state_country_id\\", \\"state_id\\", \\"id\\") on update cascade;
create index \\"user_city_state_country_id_city_state_id_city_id_index\\" on \\"user\\" (\\"city_state_country_id\\", \\"city_state_id\\", \\"city_id\\");

"
`;
